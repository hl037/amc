# Generated from amachine.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,17,162,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,1,0,1,0,1,1,1,1,1,2,1,2,1,
        3,5,3,43,8,3,10,3,12,3,46,9,3,1,3,1,3,1,3,1,3,5,3,52,8,3,10,3,12,
        3,55,9,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,
        1,5,1,5,1,5,4,5,74,8,5,11,5,12,5,75,1,5,1,5,1,6,1,6,1,6,1,6,1,6,
        1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,
        10,1,11,1,11,1,11,1,12,1,12,5,12,106,8,12,10,12,12,12,109,9,12,1,
        13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,
        14,1,14,3,14,126,8,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,
        14,5,14,137,8,14,10,14,12,14,140,9,14,3,14,142,8,14,1,15,3,15,145,
        8,15,1,15,1,15,3,15,149,8,15,1,15,3,15,152,8,15,4,15,154,8,15,11,
        15,12,15,155,1,16,4,16,159,8,16,11,16,12,16,160,0,0,17,1,1,3,2,5,
        3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,
        31,16,33,17,1,0,8,1,0,10,10,1,0,41,41,1,0,65,90,5,0,9,10,32,32,40,
        41,44,44,58,58,2,0,48,48,65,90,6,0,9,10,32,32,40,41,44,44,65,90,
        95,95,4,0,9,10,32,32,40,41,44,44,2,0,9,9,32,32,181,0,1,1,0,0,0,0,
        3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
        1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
        1,0,0,0,1,35,1,0,0,0,3,37,1,0,0,0,5,39,1,0,0,0,7,44,1,0,0,0,9,58,
        1,0,0,0,11,63,1,0,0,0,13,79,1,0,0,0,15,87,1,0,0,0,17,91,1,0,0,0,
        19,94,1,0,0,0,21,97,1,0,0,0,23,100,1,0,0,0,25,103,1,0,0,0,27,110,
        1,0,0,0,29,141,1,0,0,0,31,153,1,0,0,0,33,158,1,0,0,0,35,36,5,40,
        0,0,36,2,1,0,0,0,37,38,5,44,0,0,38,4,1,0,0,0,39,40,5,41,0,0,40,6,
        1,0,0,0,41,43,3,33,16,0,42,41,1,0,0,0,43,46,1,0,0,0,44,42,1,0,0,
        0,44,45,1,0,0,0,45,47,1,0,0,0,46,44,1,0,0,0,47,48,5,35,0,0,48,49,
        5,41,0,0,49,53,1,0,0,0,50,52,8,0,0,0,51,50,1,0,0,0,52,55,1,0,0,0,
        53,51,1,0,0,0,53,54,1,0,0,0,54,56,1,0,0,0,55,53,1,0,0,0,56,57,6,
        3,0,0,57,8,1,0,0,0,58,59,5,105,0,0,59,60,5,110,0,0,60,61,5,105,0,
        0,61,62,5,116,0,0,62,10,1,0,0,0,63,64,5,105,0,0,64,65,5,110,0,0,
        65,66,5,99,0,0,66,67,5,108,0,0,67,68,5,117,0,0,68,69,5,100,0,0,69,
        70,5,101,0,0,70,71,5,40,0,0,71,73,1,0,0,0,72,74,8,1,0,0,73,72,1,
        0,0,0,74,75,1,0,0,0,75,73,1,0,0,0,75,76,1,0,0,0,76,77,1,0,0,0,77,
        78,5,41,0,0,78,12,1,0,0,0,79,80,5,115,0,0,80,81,5,121,0,0,81,82,
        5,109,0,0,82,83,5,98,0,0,83,84,5,111,0,0,84,85,5,108,0,0,85,86,5,
        115,0,0,86,14,1,0,0,0,87,88,5,46,0,0,88,89,5,46,0,0,89,90,5,46,0,
        0,90,16,1,0,0,0,91,92,5,80,0,0,92,93,5,58,0,0,93,18,1,0,0,0,94,95,
        5,60,0,0,95,96,5,45,0,0,96,20,1,0,0,0,97,98,5,45,0,0,98,99,5,62,
        0,0,99,22,1,0,0,0,100,101,5,95,0,0,101,102,3,25,12,0,102,24,1,0,
        0,0,103,107,7,2,0,0,104,106,8,3,0,0,105,104,1,0,0,0,106,109,1,0,
        0,0,107,105,1,0,0,0,107,108,1,0,0,0,108,26,1,0,0,0,109,107,1,0,0,
        0,110,111,5,95,0,0,111,112,3,29,14,0,112,28,1,0,0,0,113,142,5,95,
        0,0,114,115,5,92,0,0,115,126,7,4,0,0,116,117,5,92,0,0,117,126,5,
        40,0,0,118,119,5,92,0,0,119,126,5,41,0,0,120,121,5,92,0,0,121,126,
        5,92,0,0,122,123,5,92,0,0,123,126,5,44,0,0,124,126,8,5,0,0,125,114,
        1,0,0,0,125,116,1,0,0,0,125,118,1,0,0,0,125,120,1,0,0,0,125,122,
        1,0,0,0,125,124,1,0,0,0,126,138,1,0,0,0,127,128,5,92,0,0,128,137,
        5,40,0,0,129,130,5,92,0,0,130,137,5,41,0,0,131,132,5,92,0,0,132,
        137,5,92,0,0,133,134,5,92,0,0,134,137,5,44,0,0,135,137,8,6,0,0,136,
        127,1,0,0,0,136,129,1,0,0,0,136,131,1,0,0,0,136,133,1,0,0,0,136,
        135,1,0,0,0,137,140,1,0,0,0,138,136,1,0,0,0,138,139,1,0,0,0,139,
        142,1,0,0,0,140,138,1,0,0,0,141,113,1,0,0,0,141,125,1,0,0,0,142,
        30,1,0,0,0,143,145,3,33,16,0,144,143,1,0,0,0,144,145,1,0,0,0,145,
        151,1,0,0,0,146,148,5,13,0,0,147,149,5,10,0,0,148,147,1,0,0,0,148,
        149,1,0,0,0,149,152,1,0,0,0,150,152,5,10,0,0,151,146,1,0,0,0,151,
        150,1,0,0,0,152,154,1,0,0,0,153,144,1,0,0,0,154,155,1,0,0,0,155,
        153,1,0,0,0,155,156,1,0,0,0,156,32,1,0,0,0,157,159,7,7,0,0,158,157,
        1,0,0,0,159,160,1,0,0,0,160,158,1,0,0,0,160,161,1,0,0,0,161,34,1,
        0,0,0,14,0,44,53,75,107,125,136,138,141,144,148,151,155,160,1,6,
        0,0
    ]

class amachineLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    COMMENT = 4
    INIT = 5
    INCLUDE = 6
    SYMBOLS = 7
    DEFAULT = 8
    PRINT = 9
    LEFT = 10
    RIGHT = 11
    T_STATE_NAME = 12
    STATE_NAME = 13
    T_SYMBOL_NAME = 14
    SYMBOL_NAME = 15
    NL = 16
    WS = 17

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "','", "')'", "'init'", "'symbols'", "'...'", "'P:'", 
            "'<-'", "'->'" ]

    symbolicNames = [ "<INVALID>",
            "COMMENT", "INIT", "INCLUDE", "SYMBOLS", "DEFAULT", "PRINT", 
            "LEFT", "RIGHT", "T_STATE_NAME", "STATE_NAME", "T_SYMBOL_NAME", 
            "SYMBOL_NAME", "NL", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "COMMENT", "INIT", "INCLUDE", 
                  "SYMBOLS", "DEFAULT", "PRINT", "LEFT", "RIGHT", "T_STATE_NAME", 
                  "STATE_NAME", "T_SYMBOL_NAME", "SYMBOL_NAME", "NL", "WS" ]

    grammarFileName = "amachine.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


